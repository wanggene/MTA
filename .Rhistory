library(graphics)
# Calculate the standard deviations
sd(df2$weight[df2$group=='ctrl'])
sd(df2$weight[df2$group=='trt1'])
sd(df2$weight[df2$group=='trt2'])
cat(' \n ------ ------------------------------ \n')
t.test(df2$weight[df2$group=='trt1'], df2$weight[df2$group=='trt2'], alternative = "two.sided")
cat(' \n ------ Bartletts Test---------------- \n')
bartlett.test(weight~group, df2)
Temp_male_sample = sample(df1$Body.Temp[df1$Gender == 'Male' ], 10000, replace = T)
Temp_female_sample = sample(df1$Body.Temp[df1$Gender == 'Female' ], 10000, replace = T)
t.test(Temp_male_sample, Temp_female_sample, alternative = "two.sided")
Temp_male_sample = sample(df1$Body.Temp[df1$Gender == 'Male' ], 1000, replace = T)
Temp_female_sample = sample(df1$Body.Temp[df1$Gender == 'Female' ], 1000, replace = T)
t.test(Temp_male_sample, Temp_female_sample, alternative = "two.sided")
shiny::runApp('~/GitHub/MTA')
runApp('~/GitHub/MTA')
runApp('~/GitHub/MTA')
runApp('~/GitHub/MTA')
runApp('~/GitHub/MTA')
runApp('~/GitHub/MTA')
runApp('~/GitHub/MTA')
runApp('~/GitHub/MTA')
runApp('~/GitHub/MTA')
View(df)
runApp('~/GitHub/MTA')
df %>% filter(To.Date > '2010-06-10') %>%
filter(fare_type == input$fare_type) %>%
group_by_(input$station) %>%
dplyr::summarise(totalfullfare_ym = sum(fare_swipe))
df %>% filter(To.Date > '2010-06-10') %>%
filter(fare_type == 'Full.Fare') %>%
group_by(Station) %>%
dplyr::summarise(totalfullfare_ym = sum(fare_swipe))
df %>% filter(To.Date > '2010-06-10') %>%
filter(fare_type == 'Full.Fare') %>%
group_by(To.Date, Station) %>%
dplyr::summarise(totalfullfare_ym = sum(fare_swipe))
runApp('~/GitHub/MTA')
runApp('~/GitHub/MTA')
setwd("~/GitHub/MTA")
runApp()
runApp()
df %>% filter(To.Date > '2010-06-10') %>%
filter(fare_type == 'Full.Fare') %>%
group_by(To.Date) %>%
dplyr::summarise(totalfullfare_ym = sum(fare_swipe))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/GitHub/MTA")
library(tidyr)
library(dplyr)
library(ggplot2)
load('mta2010_gathered.Rda')
head(df1)
names(df1)
unique(df1$month)
class(df1$month)
str(df1)
order(df1$month)
sort(df1$month)
levels(df1$month)
g1 = df1 %>% filter(!year %in% c(2010, 2017)) %>%
group_by(year) %>%
summarise(totalfullfare_ym = mean(fare_swipe)) %>%
ggplot(aes(x=year, y = totalfullfare_ym))
g1 + geom_bar( stat='identity', show.legend = F)
g1 = df1 %>% filter(!year %in% c(2010, 2017)) %>%
group_by(year) %>%
summarise(totalfullfare_ym = sum(fare_swipe)) %>%
ggplot(aes(x=year, y = totalfullfare_ym))
g1 + geom_bar( stat='identity', show.legend = F)
g1 = df1 %>% filter(!year %in% c(2010, 2017)) %>%
group_by(year) %>%
summarise(totalfullfare_ym = sum(fare_swipe)) %>%
ggplot(aes(x=year, y = totalfullfare_ym))
g1 + geom_bar( stat='identity', show.legend = F)
g1 + geom_bar(aes(x=year, fill=year), stat='identity', show.legend = F)
g2 = df1 %>% filter(To.Date > '2010-06-10') %>%
group_by(month) %>%
summarise(totalfullfare_ym = mean(fare_swipe)) %>%
ggplot(aes(x=month, y = totalfullfare_ym))
g2 + geom_bar(aes(x=month, fill=month), stat='identity', show.legend = F)
df = df1 %>% filter(To.Date > '2010-06-10')
g1 = df %>% filter(!year %in% c(2010, 2017)) %>%
group_by(year) %>%
summarise(totalfullfare_ym = sum(fare_swipe)) %>%
ggplot(aes(x=year, y = totalfullfare_ym))
g1 + geom_bar(aes(x=year, fill=year), stat='identity', show.legend = F)
g2 = df %>% filter(!year %in% c(2010, 2017)) %>%
group_by(month) %>%
summarise(totalfullfare_ym = sum(fare_swipe)) %>%
ggplot(aes(x=month, y = totalfullfare_ym))
g2 + geom_bar(aes(x=month, fill=month), stat='identity', show.legend = F)
g3 = df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by(week) %>%
summarise(totalfullfare_ym = sum(fare_swipe)) %>%
ggplot(aes(x=week, y = totalfullfare_ym))
g3 + geom_bar(aes(x=week), stat='identity', show.legend = F)
g = df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by(year, month) %>%
summarise(totalfullfare_ym = sum(fare_swipe)) %>%
ggplot(aes(x=month, y = totalfullfare_ym))
g + geom_line(aes(x=month, group=year)) +
facet_grid(. ~ year) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(text = element_text(size=9))
g = df1 %>% filter(year != 2017 & year != 2010) %>%
group_by(month, year) %>%
summarise(totalfullfare_year = sum(fare_swipe)) %>%
ggplot(aes(x=month, y= totalfullfare_year))
g = df %>% filter(year != 2017 & year != 2010) %>%
group_by(month, year) %>%
summarise(totalfullfare_year = sum(fare_swipe)) %>%
ggplot(aes(x=month, y= totalfullfare_year))
g + geom_line(aes(color = year, group=year)) +
geom_smooth(method = 'lm', se =F) +
facet_grid( year ~ . )
summary(df1$g2)
g = df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by(year) %>%
summarise(totalfullfare_ym = sum(fare_swipe))
summary(g)
max(g1$totalfulfare_ym)
max(g$totalfulfare_ym)
head(g)
math.max(g$totalfulfare_ym)
max(g$totalfulfare_ym)
max(g$totalfullfare_ym)
min(g$totalfullfare_ym)
median(g$totalfullfare_ym)
mean(g$totalfullfare_ym)
g = df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by(month) %>%
summarise(totalfullfare_ym = sum(fare_swipe))
g2= ggplot(g, aes(x=month, y = totalfullfare_ym))
g2 + geom_bar(aes(x=month, fill=month), stat='identity', show.legend = F)
max(g$totalfullfare_ym)
min(g$totalfullfare_ym)
median(g$totalfullfare_ym)
mean(g$totalfullfare_ym)
g[, max(g$totalfullfare_ym)]
g[ max(g$totalfullfare_ym) , ]
g = df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by(week) %>%
summarise(totalfullfare_ym = sum(fare_swipe)) %>%
g3= ggplot(g, aes(x=week, y = totalfullfare_ym))
g3 + geom_bar(aes(x=week), stat='identity', show.legend = F)
g = df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by(week) %>%
summarise(totalfullfare_ym = sum(fare_swipe)) %>%
g3= ggplot(g, aes(x=week, y = totalfullfare_ym))
g = df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by(week) %>%
summarise(totalfullfare_ym = sum(fare_swipe))
g3= ggplot(g, aes(x=week, y = totalfullfare_ym))
g3 + geom_bar(aes(x=week), stat='identity', show.legend = F)
max(g$totalfullfare_ym)
min(g$totalfullfare_ym)
median(g$totalfullfare_ym)
mean(g$totalfullfare_ym)
shiny::runApp()
runApp()
sort(g, g$totalfullfare_ym ) %>% head()
arrange(g, totalfullfare_ym ) %>% head()
arrange(g, totalfullfare_ym ) %>% top()
arrange(g, totalfullfare_ym ) %>% top(1)
arrange(g, totalfullfare_ym ) %>% head(1)
arrange(g, totalfullfare_ym )[1, 'week']
arrange(g, fare_swipe][ , c('year', 'fare_swipe')]
###########################################
## Total fare swipe by month and year
g = df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by(year, month) %>%
summarise(totalfullfare_ym = sum(fare_swipe)) %>%
ggplot(aes(x=month, y = totalfullfare_ym))
g + geom_line(aes(x=month, group=year)) +
facet_grid(. ~ year) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(text = element_text(size=9))
## Total fare swipe by week and year
g = df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by(year, week) %>%
summarise(totalfullfare_ym = sum(fare_swipe)) %>%
ggplot(aes(x = From.Date, y = totalfullfare_ym))
g + geom_line(aes(x=week, group=year)) +
facet_grid(. ~ year) +
#facet_wrap(. ~ year, nrow = 2) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(text = element_text(size=9))
# Q2. Total swipe by fare type and year
g = df %>% group_by(year,fare_type) %>%
summarise(totalfullfare_year = sum(fare_swipe)) %>%
filter(year != 2017 & year != 2010) %>%
ggplot(aes(x=year, y = totalfullfare_year))
g + geom_point(aes(x=year)) +
facet_wrap(~ fare_type  , nrow = 5, scales = "free_y" )
# Q3. what happed when MTA rise the fare,
g = df %>% filter(year != 2017 & year != 2010) %>%
group_by(month, year) %>%
summarise(totalfullfare_year = sum(fare_swipe)) %>%
ggplot(aes(x=month, y= totalfullfare_year))
g = df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by(year) %>%
summarise(totalfullfare_ym = sum(fare_swipe))
g1= ggplot(g, aes(x=year, y = totalfullfare_ym))
g1 + geom_bar(aes(x=year, fill=year), stat='identity', show.legend = F)
library(tidyr)
library(dplyr)
library(ggplot2)
arrange(g, swipe_count )[1, 'week']
g = df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by(year) %>%
summarise(swipe_count = sum(fare_swipe))
g1= ggplot(g, aes(x=year, y = swipe_count))
g1 + geom_bar(aes(x=year, fill=year), stat='identity', show.legend = F)
g3= ggplot(g, aes(x=week, y = swipe_count))
g3 + geom_bar(aes(x=week), stat='identity', show.legend = F)
arrange(g, swipe_count)[1, 'week']
g = df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by(year) %>%
summarise(swipe_count = sum(fare_swipe))
arrange(g, swipe_count)[1, 'year']
arrange(g, swipe_count)[ , c('year', 'fare_swipe')]
arrange(g, swipe_count)[ , c('year', 'swipe_count')]
arrange(g, desc(swipe_count))[ , c('year', 'swipe_count')]
df %>% filter(To.Date > '2010-06-10') %>%
filter(!year %in% c(2010, 2017)) %>% filter(fare_type == 'Full.Fare')
df %>% filter(To.Date > '2010-06-10') %>%
filter(!year %in% c(2010, 2017)) %>% filter(fare_type == 'Full.Fare') %>% dim()
df %>% filter(To.Date > '2010-06-10') %>%
filter(!year %in% c(2010, 2017)) %>% filter(NULL) %>% dim()
df %>% filter(To.Date > '2010-06-10') %>%
filter(!year %in% c(2010, 2017)) %>% filter(fare_type == NULL) %>% dim()
runApp()
runApp()
runApp()
runApp()
View(df)
View(df)
runApp()
c(1,2)
a1232 = c(1,2)
a1232 , c
c(a1232 , c)
cat(a1232 , c)
a1232  +  4
a1232  ,  4
c(a1232  ,  4)
a = c('a', 'b')
b = c(a , 'c')
b
1:10
:10
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(df)
View(df1)
runApp()
runApp()
names(df)
names(df1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
length(c('d', 'd'))
input$checkGroup
arrange(df1, fare_swpie)['fare_type'] %>% head()
arrange(df1, fare_swipe)['fare_type'] %>% head()
arrange(df1, fare_swipe)[c('fare_type', 'fare_count'] %>% head()
arrange(df1, fare_swipe)[c('fare_type', 'fare_count')] %>% head()
View(df)
arrange(df1, fare_swipe)[c('fare_type', 'fare_swipet')] %>% head()
arrange(df1, fare_swipe)[c('fare_type', 'fare_swipe')] %>% head()
arrange(df1, desc(fare_swipe))[c('fare_type', 'fare_swipe')] %>% head()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(df)
c = "abcd"
"abcd" == c
a = c(1,2)
a[1]
runApp()
----------------------
runApp()
runApp()
View(df)
cat('c', 'd')
length(c)
runApp()
runApp()
df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by_(input$period) %>%
dplyr::summarise(swipe_count = sum(fare_swipe))
df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by_(year) %>%
dplyr::summarise(swipe_count = sum(fare_swipe))
df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by(year) %>%
dplyr::summarise(swipe_count = sum(fare_swipe))
df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by_(fare_type) %>%
dplyr::summarise(swipe_count = sum(fare_swipe))
df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by(fare_type) %>%
dplyr::summarise(swipe_count = sum(fare_swipe))
df %>%
filter(!year %in% c(2010, 2017)) %>%
group_by(fare_type) %>%
summarise(swipe_count = sum(fare_swipe))
dim(df)
names(df)
class(df$fare_swipe)
df %>% filter(fare_type == 'Full.Fare') %>% sum(fare_swipe)
df %>% filter(fare_type == 'Full.Fare') %>% sum(df$fare_swipe)
df %>% filter(fare_type == 'Full.Fare') %>% select(fare_swipe) %>% sum()
df %>% filter(fare_type == 'Full.Fare') %>% select(fare_swipe) %>% sum()/1e6
df %>% filter(fare_type == 'Full.Fare') %>% head(10)
df %>% filter(fare_type == 'Full.Fare') %>% n()
df %>% filter(fare_type == 'Full.Fare') %>% tally()
df %>% filter(fare_type == 'Full.Fare') %>% group_by(month) %>% head()
df %>% filter(fare_type == 'Full.Fare') %>% group_by(month) %>% sum() head()
df %>% filter(fare_type == 'Full.Fare') %>% group_by(month) %>% sum()
View(df)
runApp()
runApp()
runApp()
runApp()
setwd("~/GitHub/MTA")
runApp()
